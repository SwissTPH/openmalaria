sudo: required
language: cpp
cache: apt

install:
  - test "$TRAVIS_OS_NAME" == "linux" && sudo apt-get install build-essential git cmake libboost-dev libgsl-dev libxerces-c-dev xsdcxx || true
  - test "$TRAVIS_OS_NAME" == "osx" && brew install git boost coreutils cmake gcc gsl xerces-c xsd || true

# Build openMalaria and create the release folder openMalaria-$TRAVIS_OS_NAME
build_script:
  - ./build.sh --jobs=4 -r --artifact=openMalaria-$OSNAME

# Discover and run tests (or test_script)
test_script:
  - ./build.sh --jobs=4 --tests

after_success:
  - util/generate-checksums.sh openMalaria-$OSNAME/
  - util/build-info.sh | tee openMalaria-$OSNAME/travis-build.json

deploy:
  provider: releases
  skip_cleanup: true
  api_key: $GH_TOKEN
  file: openMalaria-$OSNAME.tar.gz
  on:
    tags: true

matrix:
  include:
    # Ubuntu Xenial release
    - os: linux
      dist: xenial
      compiler: gcc
      env: OSNAME=Ubuntu-Xenial

    # Ubuntu Bionic release
    - os: linux
      dist: bionic
      compiler: gcc
      env: OSNAME=Ubuntu-Bionic

    # Max OSX release
    - os: osx
      osx_image: xcode11.5
      compiler: gcc
      env: OSNAME=macOS-10.15.4

    # Max OSX release
    - os: osx
      osx_image: xcode9.4
      compiler: gcc
      env: OSNAME=macOS-10.13

    # Clang test, don't deploy
    - os: linux
      dist: bionic
      compiler: clang
      env: OSNAME=Ubuntu-Bionic
      deploy:
        provider: script
        script: echo "Skipping deployment!"
    
    - name: gh-pages build
      os: linux
      before_install: skip
      install: skip
      script:
        - mkdir -p build/generated/src
        - pushd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - make inlined_xsd
        - pushd generated
        - wget https://github.com/rust-lang-nursery/mdBook/releases/download/v0.3.1/mdbook-v0.3.1-x86_64-unknown-linux-gnu.tar.gz
        - tar xaf *.tar.gz
        - ../../util/generateDoc.py --mdbook -O src ../schema/scenario_current.xsd ../../schema/scenario_*.xsd
        - ln -s $(ls src/ | egrep "schema-[0-9]" | sort -nr -t- -k2 | head -n1) src/schema-latest.md
        - ./mdbook build
        - popd && popd
      after_success: true
      before_deploy: skip
      deploy:
        provider: pages
        skip-cleanup: true
        github-token: $GH_TOKEN
        local-dir: schema/generated/book
        keep-history: false
        on:
          branch: master

# blacklist
branches:
  except:
    - appveyor-build
    - binary-archive
